{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;cACO;;AAEP;AACA;;AAEA;AACA;AACA,mBAAmB,MAAM;AACzB;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;;;;gBCvBwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;cACO,sBAAsB,mDAAU;AACvC;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;;;;gBChE4C;AAC5C;cACO,qBAAqB,mDAAU;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;;;;;;gBCd4C;gBACN;gBACN;AAChC;AACA;AACA;AACA;cACO,mBAAmB,mDAAU;AACpC;AACA;AACA;AACA,0BAA0B,2CAAM;AAChC,2BAA2B,6CAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;UC7BA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA,E;;;;;WCPA,wF;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D,E;;;;;;;;;;;;;;gBCNgD;;AAEhD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;;AAGA;AACA;AACA;gBACwC;gBACN;;AAElC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA,IAAI,2DAAI,e","sources":["webpack://getting-started-using-a-configuration/./src/IUpdatable.js","webpack://getting-started-using-a-configuration/./src/Updater.js","webpack://getting-started-using-a-configuration/./src/mars/gameComponents/Colony.js","webpack://getting-started-using-a-configuration/./src/mars/gameComponents/Game.js","webpack://getting-started-using-a-configuration/webpack/bootstrap","webpack://getting-started-using-a-configuration/webpack/runtime/define property getters","webpack://getting-started-using-a-configuration/webpack/runtime/hasOwnProperty shorthand","webpack://getting-started-using-a-configuration/webpack/runtime/make namespace object","webpack://getting-started-using-a-configuration/./src/index.js"],"sourcesContent":["/**\n * Interface represent object that can update over time\n */\nexport class IUpdatable {\n\n  constructor() {\n  }\n\n  /**\n    * Update function call every tick of the application\n    * @param tick {Tick} - value that contain previous tick time, current tick time and delta time\n  */\n  // eslint-disable-next-line no-unused-vars\n  update (tick) {\n  }\n\n\n  /**\n   * @NOTE\n   * Объект который умеет обновлять свой статус, раз в какой то заданный интервал вызвается функция update\n   * в которую в виде аргумента передается Tick, используется как родительский класс для тех объектов которым нужна\n   * возможность обновления\n   */\n}","import {IUpdatable} from \"./IUpdatable\";\r\n\r\n/**\r\n * Объект Тик содержит в себе текущее время, время предидущего тика, разницу времени между тиками\r\n */\r\nclass Tick {\r\n    constructor() {\r\n        this.currentTime = 0;\r\n        this.deltaTime = 0;\r\n        this.lastTime = 0;\r\n    }\r\n\r\n    init(startTimeValue) {\r\n        this.currentTime = startTimeValue;\r\n    }\r\n\r\n    /**\r\n     * Обновляет параметры тика, устаналвивает текущее время, время предидущего тика, и дельту между ними\r\n     * @param newTimeValue\r\n     */\r\n    updateTime(newTimeValue) {\r\n        this.lastTime = this.currentTime;\r\n        this.currentTime = newTimeValue;\r\n        this.deltaTime = this.currentTime - this.lastTime;\r\n    }\r\n}\r\n\r\n/**\r\n * Class that calculate tick values and update with some interval\r\n */\r\nexport class Updater extends IUpdatable {\r\n\r\n    /**\r\n     * @type {Tick}\r\n     */\r\n    tick;\r\n\r\n    /**\r\n     * @type {Function}\r\n     */\r\n    onUpdate;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        //create tick object exemplar\r\n        this.tick = new Tick();\r\n    }\r\n\r\n    run() {\r\n        //With some interval call update for example every 1000ms (1s)\r\n        this.tick.init(Date.now());\r\n        setInterval(() => this.update(this.tick), 1000);\r\n    }\r\n\r\n    /**\r\n     * Function that calculate current tick values and call update\r\n     * @param tick\r\n     */\r\n    update(tick) {\r\n        console.log(tick);\r\n        tick.updateTime(Date.now());\r\n        super.update(tick);\r\n    }\r\n}","import {IUpdatable} from \"../../IUpdatable\";\r\n\r\nexport class Colony extends IUpdatable {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * Старт игры в колонии, тут определим начальное состояние\r\n     * сколько есть колонистов сразу, сколько есть ресурсов и т.д\r\n     */\r\n    start() {\r\n        console.log(\"game should start\");\r\n    }\r\n}","import {IUpdatable} from \"../../IUpdatable\";\r\nimport {Updater} from \"../../Updater\";\r\nimport {Colony} from \"./Colony\";\r\n\r\n/**\r\n * Класс игры, тут собираем все стартовые объекты в месте, задаем нужные нам параметры и запускаем игру\r\n */\r\nexport class Game extends IUpdatable {\r\n    constructor() {\r\n        super();\r\n\r\n        this.colony = new Colony();\r\n        this.updater = new Updater();\r\n\r\n        this.updater.onUpdate = () => this.update;\r\n    }\r\n\r\n    /**\r\n     * Запус игры, запускаем апдейтер после чего он начинает вызвает обновления, и вызваем в колонии старт\r\n     * чтобы она могла определить свое начальное состояние\r\n     */\r\n    startGame() {\r\n        this.updater.run();\r\n        this.colony.start();\r\n    }\r\n\r\n    update(tick) {\r\n        this.colony.update(tick);\r\n    }\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import {Game} from \"./mars/gameComponents/Game\";\n\nclass StartScreen {\n  constructor() {\n    this.startGameButton = document.getElementById(\"startGameButton\");\n    this.header = document.getElementById(\"header\");\n    this.gameScreen = document.getElementById(\"gameScreen\");\n\n    this.startGameButton.addEventListener('click', this.onStartButtonClick.bind(this), false);\n    this.header.addEventListener('animationend', this.onFadeOutComplete.bind(this));\n  }\n\n  onStartButtonClick(e) {\n    this.header.classList.add(\"elementToFadeInAndOut\");\n    this.startGameButton.removeEventListener(\"click\", this.onStartButtonClick);\n  }\n\n  onFadeOutComplete() {\n    this.header.hidden = true;\n    this.gameScreen.hidden = false;\n  }\n}\n\n\nlet startScreen = new StartScreen();\n\n\n/**\n * Объект который умеет представлять себя в текстовом виде\n */\nimport {IUpdatable} from \"./IUpdatable\";\nimport {Updater} from \"./Updater\";\n\nclass PrintableObject {\n  toString() {\n    // noinspection JSUnresolvedVariable\n    return this.constructor.name;\n  }\n}\n\nlet a = 1;\nlet b = 2;\n\nconsole.log(a);\n\nconsole.log(a + b);\n\nnew Game().startGame();"],"names":[],"sourceRoot":""}